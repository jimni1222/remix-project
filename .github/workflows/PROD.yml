name: klaytnide PROD(.com) workflow
on:
  pull_request:
    branches:
      - remixForKlaytn
    types: [closed]
jobs:
  merge_check:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - run: |
         echo "PR ${{ github.event.number }} has been merged."
  close_check:
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    steps:
    - run: |
         echo "PR ${{ github.event.number }} has been closed without being merged."
  test:
    needs: merge_check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14.17.6'
    - name: Test Build
      run: |
        npm install -g @nrwl/cli
        npm install
        npm run downloadsolc_assets
        npm run build:production
  slack:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: OUTPUT GITHUB_WORKFLOW_URL
      id: val
      run: |
         GITHUB_WORKFLOW_URL=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
         echo "::set-output name=WORKFLOW_URL::$GITHUB_WORKFLOW_URL"
    - name: Run Script
      run: |
         echo "GITHUB_WORKSPACE : ${GITHUB_WORKSPACE}"
         chmod +x "${GITHUB_WORKSPACE}/.github/script.sh"
         "${GITHUB_WORKSPACE}/.github/script.sh"
      env:
          Approval_URL: ${{ steps.val.outputs.WORKFLOW_URL }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  approval-check:
    runs-on: ubuntu-latest
    needs: slack
    environment: production
    steps:
    - uses: actions/checkout@v2
  Prod:
    needs: approval-check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14.17.6'
    - uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - uses: aws-actions/setup-sam@v1
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: npm install -g @nrwl/cli
      run: |
        npm install -g @nrwl/cli
    - name: npm run build and sync to s3 
      run: |
        npm install
        npm run downloadsolc_assets
        npm run build:production
        cd dist/apps/remix-ide
        mv * ../../../
        cd $GITHUB_WORKSPACE
        aws s3 sync --delete --exclude ".git/*" --exclude "node_modules/*" ./ s3://ide.klaytn.net
